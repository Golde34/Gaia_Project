type Query {
  # Authentication Service
  

  # Task Manager
  listAllProjects: [Project]!
  getProjectById(input: IdInput!): Project!
  listAllTasks: [Task]!
  getTaskById(input: IdInput!): Task!
}

type Mutation {
  # Authentication Service
  signin(input: SigninInput!): AuthTokenResponse!
  gaiaAutoSignin(input: SigninInput!): AuthTokenResponse!
  checkToken(input: TokenInput!): TokenResponse!
  checkPermission(input: UserPermissionInput!): UserPermissionResponse!
  # Task Manager
  createProject(input: CreateProjectInput!): Project!
  updateProject(input: UpdateProjectInput!): Project!
  deleteProject(input: IdInput!): Project!
  updateProjectName(input: UpdateObjectNameInput!): Project!
  updateProjectColor(input: UpdateColorInput!): Project!
  archiveProject(input: IdInput!): Project!
  enableProject(input: IdInput!): Project!

  createTask(input: CreateTaskInput!): Task!
  updateTask(input: UpdateTaskInput!): Task!
  deleteTask(input: IdInput!): Task!
  generateTaskWithoutGroupTask(input: GenerateTaskWithoutGroupTaskInput!): Task!
  updateTaskInDialog(input: UpdateTaskInDialogInput!): Task!
  moveTask(input: MoveTaskInput!): Task!
  archiveTask(input: IdInput!): Task!
  enable(input: IdInput!): Task!
}

input IdInput {
  id: String!
}

input UpdateObjectNameInput {
  id: String!
  name: String!
}

input UserPermissionInput {
  userId: ID!
  permissionId: String!
}

type UserPermissionResponse {
  id: ID!
  name: String!
}